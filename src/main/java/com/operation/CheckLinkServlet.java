package com.operation;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@WebServlet("/result")
public class CheckLinkServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession();
        if (session == null || session.getAttribute("username") == null) {
            response.sendRedirect(request.getContextPath() + "/accounts/login.jsp");
            return;
        }

        String url = request.getParameter("link");
        Map<String, String> statusDetails = new HashMap<>();
        String status;

        try {
            if (url == null || !isValidURL(url)) {
                response.getWriter().write("Invalid URL");
                return;
            }

            HttpURLConnection connection = (HttpURLConnection) new URL(url).openConnection();
            connection.setRequestMethod("HEAD");
            connection.connect();
            int statusCode = connection.getResponseCode();
            statusDetails.put("Status Code", String.valueOf(statusCode));

            Map<String, List<String>> headers = connection.getHeaderFields();
            for (Map.Entry<String, List<String>> entry : headers.entrySet()) {
                String key = entry.getKey();
                String value = String.join(", ", entry.getValue());
                if (key != null && value != null) {
                    statusDetails.put(key, value);
                }
            }

            if (statusCode == 200) {
                status = "OK";
            } else if (statusCode >= 400 && statusCode <= 599) {
                status = "Bad";
            } else {
                status = "Problematic";
            }
        } catch (Exception e) {
            status = "Broken";
            statusDetails.put("Error", "Unable to retrieve headers: " + e.getMessage());
        }

        session.setAttribute("url", url);
        session.setAttribute("status", status);
        session.setAttribute("statusDetails", statusDetails);
        response.sendRedirect(request.getContextPath()+"/display/searchresult.jsp");
    }

    private boolean isValidURL(String urlString) {
        try {
            new URL(urlString).toURI();
            return true;
        } catch (Exception e) {
            return false;
        }
    }

}
