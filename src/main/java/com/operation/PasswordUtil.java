package com.operation;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.util.Base64;

import config.properties;


public class PasswordUtil{
	
	private static String hashCode = properties.hashCode;

    public static String hashPassword(String password) {
        String salt = getSalt();
        return hashPassword(password, salt) + ":" + salt;
    }

    public static boolean verifyPassword(String password, String storedHashWithSalt) {
        String[] parts = storedHashWithSalt.split(":");
        if (parts.length != 2) {
            throw new IllegalArgumentException("The stored password must have the form 'hash:salt'");
        }
        String hash = parts[0];
        String salt = parts[1];
        return hash.equals(hashPassword(password, salt));
    }

    private static String hashPassword(String password, String salt) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            md.update(salt.getBytes());
            byte[] bytes = md.digest(password.getBytes());
            return Base64.getEncoder().encodeToString(bytes);
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

    private static String getSalt() {
        SecureRandom sr;
        try {
            sr = SecureRandom.getInstance(hashCode);
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
        byte[] salt = new byte[16];
        sr.nextBytes(salt);
        return Base64.getEncoder().encodeToString(salt);
    }

    public static void main(String[] args) {
    	System.out.println(hashCode);
        //	Example usage
        String password = "123654";
        String hashedPassword = hashPassword("1236");
        System.out.println("Hashed password: " + hashedPassword);

        // Verify password
        boolean isPasswordCorrect = verifyPassword(password, hashedPassword);
        System.out.println("Password verification result: " + isPasswordCorrect);
    }
}